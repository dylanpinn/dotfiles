" Move the viminfo file out of the $HOME directory.  A logical place would be
" $XDG_CACHE_HOME (typically $HOME/.cache/).
"
" This file will only be created if this directory exists, so this is handled
" during the installation of the dotfiles.
"
set viminfofile=$XDG_CACHE_HOME/vim/viminfo

" Vim saves a history of `:` commands and search history in the viminfo file.
" By default this is set to 50. 200 is a better value to ensure that we are
" not losing any useful commands or search history.
"
set history=200

" Enable automatic backups before overwriting a file and leave it around after
" the file has been written.
"
" We will also want to move these backup files to the $XDG_CACHE_HOME
" directory.  This directory is created during dotfile installation.
"
" The double trailing slashes will tell Vim to use the full escaped path of
" the file to avoid collisions.
"
set backup
set backupdir=$XDG_CACHE_HOME/vim/backup//

" Move swap files to a dedicated directory, rather than the default of the
" same directory as the source file.  This directory is created during dotfile
" installation.
"
" Add two trailing slashes to the path to tell Vim to use the full escaped
" path of the file to avoid collisions.
"
set directory=$XDG_CACHE_HOME/vim/swap//

" Keep track of undo history for files between sessions.  This ensures that
" undo and redo are available between Vim invocations.  These files are kept
" in a cache directory.  This directory is created during dotfile
" installation.
"
" Add two trailing slashes to the path to tell Vim to use the full escaped
" path of the file to avoid collisions.
"
set undofile
set undodir=$XDG_CACHE_HOME/vim/undo//

" Enable file type detection.
" Also load indent files, to automatically do language-dependent indenting.
"
filetype plugin indent on

" When checking spelling, use Australian English by default.
"
set spelllang=en_au

" Vim includes defaults for comments and path that date back to its history as
" a mainly C development environment.  Removing these values allows us to use
" filetype plugins to set them as needed.
"
set comments= commentstring= define= include=
set path-=/usr/include

" Automatically reload a file inside of Vim if it has changed on the disk.
" A good example of this is updated code from a VCS.
"
set autoread

" Allow Vim's backspace to behave a bit more as you would expect it to.
"
set backspace+=indent	" Leading whitespace created by autoindent.
set backspace+=eol	" Line breaks.
set backspace+=start 	" Text before the start of the current insertion.

" When soft-wraps are enabled with 'wrap' option, then break the line between
" words, rather than within them.
"
set linebreak

" When wrapping a line using soft-wraps, highlight that it has been wrapped by
" inserting a leading string - "> ".
"
" Using the following syntax so we don't have to escape the trailing space and
" have git yell at us for trailing whitespace.
:let &showbreak = '> '

" When wrapping a line, if that line is indented then the wrapped line is
" also indented the same amount.
"
set breakindent

" Automatic text wrapping options using flags in the 'formatoptions' option
" begin here.

" Don't break a line after a one-letter word like "I" or "a".
"
set formatoptions+=1

" When joining lines that contain comments, if possible remove the comment
" leader.
"
set formatoptions+=j

" Use two spaces to end a sentence. This helps improve readability using
" monospaced fonts.  This also helps vim work with sentence objects for the
" purpose of the 's' text objects, the '(' and ')' sentence motions, and
" formatting with the 'gq' command must now be separated by two spaces.
"
" See https://stevelosh.com/blog/2012/10/why-i-two-space/
"
set cpoptions+=J

" Because we are using two spaces for ending sentences. Vim can determine if
" the space after an abbreviation such as "Mr. Pinn" is the end of the
" sentence or not and then determine if it should be split on it. The 'p' flag
" makes this possible.
"
set formatoptions+=p

" Switch syntax highlighting on if it already not enabled.
"
if !exists('syntax_on')
  syntax on
endif
